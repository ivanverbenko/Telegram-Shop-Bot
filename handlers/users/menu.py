from aiogram import Router, types, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, CallbackQuery

from keybroads import categories



catalog_button = KeyboardButton(text="–ö–∞—Ç–∞–ª–æ–≥")
cart_button = KeyboardButton(text="–ö–æ—Ä–∑–∏–Ω–∞")
delivery_status_button = KeyboardButton(text="–°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏")

settings = '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞'
orders = 'üöö –ó–∞–∫–∞–∑—ã'
questions = '‚ùì –í–æ–ø—Ä–æ—Å—ã'

# @dp.message(IsAdmin(), commands='menu')
# async def admin_menu(message: Message):
#     markup = ReplyKeyboardMarkup(selective=True)
#     markup.add(settings)
#     markup.add(questions, orders)
#
#     await message.answer('–ú–µ–Ω—é', reply_markup=markup)
#
#
# @dp.message(IsUser(), commands='menu')
# async def user_menu(message: Message):
#     markup = ReplyKeyboardMarkup(selective=True)
#     markup.add(catalog)
#     markup.add(cart)
#     markup.add(delivery_status)
#
#     await message.answer('–ú–µ–Ω—é', reply_markup=markup)
router = Router()

@router.message(CommandStart())
async def cmd_start(message: types.Message):
    user_button = KeyboardButton(text="–ö–∞—Ç–∞–ª–æ–≥")
    admin_button = KeyboardButton(text='admin_message')

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ç–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    markup = ReplyKeyboardMarkup(
        keyboard=[
            [user_button, admin_button]
        ],
        resize_keyboard=True
    )

    await message.answer('''–ü—Ä–∏–≤–µ—Ç! üëã

ü§ñ –Ø –±–æ—Ç-–º–∞–≥–∞–∑–∏–Ω –ø–æ –ø–æ–¥–∞–∂–µ —Ç–æ–≤–∞—Ä–æ–≤ –ª—é–±–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.

üõçÔ∏è –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ –∏ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∏–≥–ª—è–Ω—É–≤—à–∏–µ—Å—è 
—Ç–æ–≤–∞—Ä—ã –≤–æ–∑–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /catalog.

‚ùì –í–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã? –ù–µ –ø—Ä–æ–±–ª–µ–º–∞! –ö–æ–º–∞–Ω–¥–∞ /sos –ø–æ–º–æ–∂–µ—Ç 
—Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç–∞—Ä–∞—é—Ç—Å—è –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –æ—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è.
    ''', reply_markup=markup)

@router.message(F.text=='–ö–∞—Ç–∞–ª–æ–≥')
async def catalog(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞", reply_markup= await categories())

@router.callback_query(F.data.startswith('category_'))
async def category_selected(callback: CallbackQuery):
    category_id = callback.data
    await callback.message.answer(f"–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è")

@router.message(Command(commands='menu'))
async def user_menu(message: types.Message):
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ç–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    markup = ReplyKeyboardMarkup(
        keyboard=[
            [catalog_button, cart_button],
            [delivery_status_button]
        ],
        resize_keyboard=True,  # –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–¥ —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫
        one_time_keyboard=True  # –°–∫—Ä—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer('–ú–µ–Ω—é', reply_markup=markup)
